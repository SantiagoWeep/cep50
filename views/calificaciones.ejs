<!DOCTYPE html>
<html lang="es">
  <link rel="icon" href="/images/pedilink-icono.png" type="image/png">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <title>Calificaciones</title>
  <link href="/vendor/bootstrap/bootstrap.min.css" rel="stylesheet">

  <style>
  body {
    font-family: 'Segoe UI', sans-serif;
    background-color: #f4f7fa;
    padding: 20px;
  }

  h1, h3 {
    font-weight: 600;
    color: #333;
  }

  h2 {
    color: #1976d2;
    font-weight: 700;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 2em;
    background-color: white;
    box-shadow: 0 0 10px rgba(0,0,0,0.05);
    border-radius: 5px;
    overflow: hidden;
  }

  thead tr:first-child {
    background-color: #2f3e4e;
    color: white;
  }

  thead tr:nth-child(2) {
    background-color: #3e4f61;
    color: white;
  }

  /* Alternar filas */
tbody tr:nth-child(odd) {
  background-color: #edf0ef; 
}

tbody tr:nth-child(even) {
  background-color: #ffffff; 
}


tbody tr:hover {
  background-color: #e6f3ff;
}


  th, td {
    padding: 10px 6px;
    border: 1px solid #ddd;
    text-align: center;
    font-size: 14px;
  }

  input[type="number"] {
    width: 45px;
    padding: 5px;
    font-size: 13px;
    text-align: center;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  input.nota {
    width: 40px;
  }

  .promedio-trimestre {
    background-color: #e6f3ff;
    font-weight: bold;
    border: 1px solid #b3d8ff;
  }

  .promedio-final {
    background-color: #fff3db;
    font-weight: bold;
    border: 1px solid #ffd58a;
  }

  .examen {
    background-color: #fcefe3;
    border: 1px solid #ffd6a1;
  }

  button {
    padding: 10px 20px;
    font-size: 15px;
    background-color: #1976d2;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    transition: background-color 0.3s ease;
  }

  button:hover {
    background-color: #1259a6;
  }

  input:disabled {
    background-color: #eee !important;
  }


  /* Quitar flechas en inputs type="number" */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield; /* Firefox */
  appearance: textfield;
}


/* Por defecto en escritorio */
.examen-esp {
  display: table-cell;
}

/* En móviles (pantallas chicas) */
@media (max-width: 768px) {
  .examen-esp {
    display: none;
  }
body {
    font-size: 12px;
    padding: 10px;
  }

  h1 {
    font-size: 18px;
  }

  h2 {
    font-size: 16px;
  }

  h3 {
    font-size: 14px;
  }

  table {
    font-size: 11px; /* menos espacio en toda la tabla */
  }

  th, td {
    padding: 4px 2px; /* reducir padding horizontal y vertical */
    font-size: 11px;
  }

  .celda-notas {
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* 2 columnas iguales */
  gap: 4px; /* espacio entre inputs */
  justify-items: center; /* centrar horizontal */
  align-items: center;   /* centrar vertical */
}

  /* inputs más pequeños */
  .celda-notas input {
    width: 32px;
    height: 22px;
    font-size: 11px;
    padding: 2px;
  }

  input.promedio-trimestre,
  input.promedio-final {
    width: 38px;
    font-size: 11px;
    padding: 2px;
  }

  input.examen {
    width: 38px;
    font-size: 11px;
    padding: 2px;
  }

  /* Botón guardar más chico */
  button {
    font-size: 12px;
    padding: 6px 12px;
  }

  /* Nombre del alumno más angosto (pero visible) */
  td:first-child, th:first-child {
    max-width: 100px;
    font-size: 11px;
    
    overflow: hidden;
    text-overflow: ellipsis; 
  }

  /* compactar aún más celdas de trimestres */
  .celda-notas {
    grid-template-columns: repeat(2, 1fr); /* 2x2 inputs */
    gap: 2px;
  }

}





</style>

</head>
<body>


<% if (typeof mensaje !== 'undefined') { %>
  <div class="alert alert-<%= tipoMensaje %> alert-dismissible fade show" role="alert">
    <%= mensaje %>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
  </div>
<% } %>

  <h1>Profesor: <%= nombreCompleto %></h1>
  

  <form method="POST">
    <% cursos.forEach(curso => { %>
      <h2>Curso: <%= curso.curso %></h2>
        <div style="display: flex; justify-content: flex-end; width: 100%;">
          <button type="submit" formaction="/calificaciones/guardarNotas" class="btn-guardar">Guardar</button>
        </div>
      <% curso.materias.forEach(materia => { %>
        <h3>Materia: <%= materia.materia_nombre %></h3>

        <table>
                <thead>
          <tr>
            <th>Alumno</th>
            <% [1, 2, 3].forEach(tri => { %>
              <th colspan="2">Trimestre <%= tri %></th>
            <% }) %>
            <th class="examen-esp">Ex. Dic.</th>
            <th class="examen-esp">Ex. Mar.</th>
            <th class="examen-esp">Promedio Final</th>
          </tr>
          <tr>
            <th></th>
            <% [1, 2, 3].forEach(() => { %>
              <th>Notas</th>
              <th>Prom.</th>
            <% }) %>
            <th class="examen-esp"></th><th class="examen-esp"></th><th class="examen-esp"></th>
          </tr>
        </thead>

          <tbody>
            <% materia.alumnos.forEach(alumno => { %>
              <tr>
                <td> <%= alumno.apellido %> <%= alumno.nombre %></td>

                <% alumno.notas.forEach(nota => { %>
                  <td class="celda-notas">
                    <% for (let i = 1; i <= 4; i++) { %>
                      <input 
                        type="number" 
                        name="nota_<%= alumno.id %>_<%= curso.curso_id %>_<%= materia.materia_id %>_<%= nota.trimestre %>_<%= i %>"
                        value="<%= nota.calificaciones[i] !== null ? nota.calificaciones[i] : '' %>" 
                        placeholder="N<%= i %>" 
                        min="0" max="10" step="0.1" 
                        class="nota"
                      >
                    <% } %>
                  </td>

                  <td>
                    <input 
                      type="number" 
                      readonly 
                      class="promedio-trimestre promedio-input" 
                      data-alumno="<%= alumno.id %>" 
                      data-materia="<%= materia.materia_id %>" 
                      data-trimestre="<%= nota.trimestre %>" 
                      data-curso="<%= curso.curso_id %>"
                      step="0.01" min="0" max="10"
                      value=""
                    >
                  </td>
                <% }) %>

                <td class="examen-esp">
                 <input 
                  type="number"
                  name="nota_<%= alumno.id %>_<%= curso.curso_id %>_<%= materia.materia_id %>_4_1"
                  class="examen examen-dic promedio-input"
                  value="<%= alumno.examen_dic !== undefined ? alumno.examen_dic : '' %>"
                />
                </td>
                <td class="examen-esp">
                  <input 
                  type="number"
                  name="nota_<%= alumno.id %>_<%= curso.curso_id %>_<%= materia.materia_id %>_4_2"
                  class="examen examen-mar promedio-input"
                  value="<%= alumno.examen_mar !== undefined ? alumno.examen_mar : '' %>"
                />
                </td>
                <td class="examen-esp">
                  <input 
                    type="number" 
                    readonly 
                    class="promedio-final promedio-input" 
                    data-alumno="<%= alumno.id %>" 
                    data-materia="<%= materia.materia_id %>" 
                    data-curso="<%= curso.curso_id %>"
                    step="0.01" min="0" max="10">
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      <% }) %>
    <% }) %>

    <div style="text-align: center; display: flex; justify-content: right">
      <button type="submit" formaction="/calificaciones/guardarNotas" class="btn-guardar">Guardar</button>     
    </div>

  </form>
  <div class="modal fade" id="confirmExitModal" tabindex="-1" aria-labelledby="confirmExitLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="confirmExitLabel">Cambios sin guardar</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        Hay cambios sin guardar. ¿Querés salir sin guardar?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button id="confirmExitBtn" type="button" class="btn btn-danger">Salir sin guardar</button>
      </div>
    </div>
  </div>
</div>


  <script src="/vendor/bootstrap/bootstrap.bundle.min.js"></script>
<script>
  function truncar2dec(valor) {
    return Math.floor(valor * 100) / 100;
  }

  function calcularPromedios() {
    document.querySelectorAll('tbody tr').forEach(tr => {
      const promedioInputs = tr.querySelectorAll('.promedio-trimestre');
      const promedioFinalInput = tr.querySelector('.promedio-final');
      const exDicInput = tr.querySelector('.examen-dic');
      const exMarInput = tr.querySelector('.examen-mar');

      let promedios = [];

      promedioInputs.forEach(promInput => {
      const trimestre = promInput.dataset.trimestre;
      const alumnoId = promInput.dataset.alumno;
      const materiaId = promInput.dataset.materia;
      const cursoId = promInput.dataset.curso;
      let notas = [];

      for (let i = 1; i <= 4; i++) {
        const name = `nota_${alumnoId}_${cursoId}_${materiaId}_${trimestre}_${i}`;
        const inputNota = tr.querySelector(`input[name="${name}"]`);
        if (inputNota) {
          // Solo considerar valores válidos y que no sean vacíos
          const valStr = inputNota.value.trim();
          if (valStr !== '') {
            const val = parseFloat(valStr);
            if (!isNaN(val)) {
              notas.push(val);
            }
          }
          // NO cambiar inputNota.value aquí para respetar lo que puso el usuario
        }
      }

      if (notas.length > 0) {
        const suma = notas.reduce((a, b) => a + b, 0);
        const promedio = truncar2dec(suma / notas.length);
        promInput.value = promedio.toFixed(2);
        promedios.push(promedio);
      } else {
        promInput.value = '';
      }
    });

    let promedioFinal = null;
    if (promedios.length > 0) {
      promedioFinal = truncar2dec(promedios.reduce((a, b) => a + b, 0) / promedios.length);
    }


      const exDicVal = parseFloat(exDicInput.value);
      const exMarVal = parseFloat(exMarInput.value);
      const usarExamen = (!isNaN(exDicVal) && exDicVal >= 6) || (!isNaN(exMarVal) && exMarVal >= 6);

      if (usarExamen) {
        const notaFinal = (!isNaN(exDicVal) && exDicVal >= 6) ? exDicVal : exMarVal;
        promedioFinalInput.value = !isNaN(notaFinal) ? notaFinal.toFixed(2) : '';
      } else if (typeof promedioFinal === 'number' && !isNaN(promedioFinal)) {
        promedioFinalInput.value = promedioFinal.toFixed(2);
      } else {
        promedioFinalInput.value = '';
      }

      // Control de habilitar/deshabilitar exámenes
      if (!isNaN(promedioFinal) && promedioFinal >= 6) {
        exDicInput.disabled = true;
        exMarInput.disabled = true;
        exDicInput.value = '';
        exMarInput.value = '';
      } else {
        exDicInput.disabled = false;
        exMarInput.disabled = false;
      }
    });
  }

  // Escuchar cambios
  document.querySelectorAll('input.nota, input.examen').forEach(input => {
    input.addEventListener('input', calcularPromedios);
  });

  // Calcular al cargar
  calcularPromedios();


  
  setTimeout(() => {
    const alert = document.querySelector('.alert');
    if (alert) {
      const bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
      bsAlert.close();
    }
  }, 4000);

  
  if (window.location.search.includes('guardado=1')) {
    const newUrl = window.location.origin + window.location.pathname;
    window.history.replaceState({}, document.title, newUrl);
  }


  let hayCambios = false;

  // Detectar cambios en inputs relevantes
  document.querySelectorAll('input.nota, input.examen').forEach(input => {
    input.addEventListener('input', () => {
      hayCambios = true;
    });
  });

  // Cuando se envía el formulario, ya no hay cambios pendientes
  document.querySelector('form').addEventListener('submit', () => {
    hayCambios = false;
  });

  // Aviso antes de salir si hay cambios sin guardar
  window.addEventListener('beforeunload', (e) => {
    if (hayCambios) {
      e.preventDefault();
      e.returnValue = ''; 
    }
  });

// bloque de form al enviar 


   document.querySelector('form').addEventListener('submit', function () {
    document.querySelectorAll('.btn-guardar').forEach(btn => {
      btn.disabled = true;
      btn.innerText = 'Guardando...'; // opcional
    });
  });



  
document.addEventListener("DOMContentLoaded", () => {
  const ahora = new Date();
  const mes = ahora.getMonth() + 1; // 1-12

  if ([12, 1, 3].includes(mes)) {
    document.querySelectorAll(".examen-esp").forEach(el => {
      el.style.setProperty("display", "table-cell");
    });
  }
});


</script>

</body>
</html>
