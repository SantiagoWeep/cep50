
use boletines;

select * from boletines;
select * from cursos; 
select * from profesores; 
select * from alumnos;
select * from notas;

	SET SQL_SAFE_UPDATES = 0;
	DROP TABLE IF EXISTS alumnos;
	ALTER TABLE cursos DROP COLUMN orden;
	-- Desactivar restricciones temporales para evitar errores por claves foráneas


	describe alumnos;

	CREATE TABLE profesores (
		id BIGINT AUTO_INCREMENT PRIMARY KEY,
		nombre VARCHAR(255) NOT NULL,
		apellido VARCHAR(255) NOT NULL,
		dni VARCHAR(20) NOT NULL UNIQUE,
		activo BOOLEAN NOT NULL
	);

	CREATE TABLE materias (
		id BIGINT AUTO_INCREMENT PRIMARY KEY,
		nombre VARCHAR(255) NOT NULL UNIQUE
	);
	CREATE TABLE cursos (
		id BIGINT AUTO_INCREMENT PRIMARY KEY,
		nombre VARCHAR(255) NOT NULL
	);

	CREATE TABLE curso_profesor_materia (
		id BIGINT AUTO_INCREMENT PRIMARY KEY,
		curso_id BIGINT NOT NULL,
		profesor_id BIGINT NOT NULL,
		materia_id BIGINT NOT NULL,
		FOREIGN KEY (curso_id) REFERENCES cursos(id),
		FOREIGN KEY (profesor_id) REFERENCES profesores(id),
		FOREIGN KEY (materia_id) REFERENCES materias(id),
		UNIQUE (curso_id, materia_id) -- un curso solo puede tener un profesor por materia
	);



	CREATE TABLE alumnos (
	  id BIGINT AUTO_INCREMENT PRIMARY KEY,
	  nombre VARCHAR(255) NOT NULL,
	  apellido VARCHAR(255) NOT NULL,
	  dni VARCHAR(20) NOT NULL UNIQUE,
	  edad INT NOT NULL,
	  telefono VARCHAR(20),
	  tutor VARCHAR(255),
	  regular TINYINT(1) NOT NULL DEFAULT 1,
	  curso_id BIGINT NOT NULL,

	  FOREIGN KEY (curso_id) REFERENCES cursos(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
	);

	CREATE TABLE notas (
	  id BIGINT AUTO_INCREMENT PRIMARY KEY,
	  alumno_id BIGINT,
	  curso_id BIGINT,
	  materia_id BIGINT,
	  trimestre INT NOT NULL,
	  numero INT NOT NULL,  -- 1 para examen diciembre, 2 para examen marzo
	  nota DECIMAL(5,2) NOT NULL,
	  guardado TINYINT(1) DEFAULT 1,
	  enviado TINYINT(1) DEFAULT 0,
	  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	  FOREIGN KEY (alumno_id) REFERENCES alumnos(id),
	  FOREIGN KEY (curso_id) REFERENCES cursos(id),
	  FOREIGN KEY (materia_id) REFERENCES materias(id)
	);

	CREATE TABLE boletines (
	  id BIGINT AUTO_INCREMENT PRIMARY KEY,
	  alumno_id BIGINT,
	  curso_id BIGINT,
	  materia_id BIGINT,
	  trimestre_1 DECIMAL(5,2),
	  trimestre_2 DECIMAL(5,2),
	  trimestre_3 DECIMAL(5,2),
	  examen_dic DECIMAL(5,2),
	  examen_mar DECIMAL(5,2),
	  promedio_final DECIMAL(5,2),
	  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	  FOREIGN KEY (alumno_id) REFERENCES alumnos(id),
	  FOREIGN KEY (curso_id) REFERENCES cursos(id),
	  FOREIGN KEY (materia_id) REFERENCES materias(id)
	);

	CREATE TABLE examenes_especiales (
	  id BIGINT AUTO_INCREMENT PRIMARY KEY,
	  alumno_id BIGINT,
	  curso_id BIGINT,
	  materia_id BIGINT,
	  tipo ENUM('diciembre', 'marzo'),
	  nota DECIMAL(5,2),
	  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	  UNIQUE KEY (alumno_id, curso_id, materia_id, tipo)
	);

INSERT INTO boletines (alumno_id, curso_id, materia_id, trimestre_1, trimestre_2, trimestre_3, examen_dic, examen_mar, promedio_final)
SELECT 
  n.alumno_id,
  n.curso_id,
  n.materia_id,
  ROUND(AVG(CASE WHEN n.trimestre = 1 THEN n.nota END), 2) AS trimestre_1,
  ROUND(AVG(CASE WHEN n.trimestre = 2 THEN n.nota END), 2) AS trimestre_2,
  ROUND(AVG(CASE WHEN n.trimestre = 3 THEN n.nota END), 2) AS trimestre_3,
  MAX(CASE WHEN n.trimestre = 4 AND n.numero = 1 THEN n.nota END) AS examen_dic,
  MAX(CASE WHEN n.trimestre = 4 AND n.numero = 2 THEN n.nota END) AS examen_mar,
  
  -- PROMEDIO FINAL
  ROUND(
    CASE 
      WHEN 
        (AVG(CASE WHEN n.trimestre IN (1,2,3) THEN n.nota END)) >= 6 THEN 
        AVG(CASE WHEN n.trimestre IN (1,2,3) THEN n.nota END)
      WHEN 
        MAX(CASE WHEN n.trimestre = 4 AND n.numero = 1 THEN n.nota END) >= 6 THEN 
        MAX(CASE WHEN n.trimestre = 4 AND n.numero = 1 THEN n.nota END)
      WHEN 
        MAX(CASE WHEN n.trimestre = 4 AND n.numero = 2 THEN n.nota END) >= 6 THEN 
        MAX(CASE WHEN n.trimestre = 4 AND n.numero = 2 THEN n.nota END)
      ELSE
        AVG(CASE WHEN n.trimestre IN (1,2,3) THEN n.nota END)
    END
  , 2) AS promedio_final

FROM notas n
GROUP BY n.alumno_id, n.curso_id, n.materia_id;
SELECT * FROM boletines;


select * from alumnos;

use boletines;
describe notas;

SELECT 
  c.id AS curso_id,
  c.nombre AS curso_nombre,
  m.id AS materia_id,
  m.nombre AS materia_nombre,
  a.id AS alumno_id,
  a.nombre AS alumno_nombre,
  a.apellido AS alumno_apellido,
  n.trimestre,
  n.numero,
  n.nota
FROM curso_profesor_materia cpm
JOIN cursos c ON c.id = cpm.curso_id
JOIN materias m ON m.id = cpm.materia_id
JOIN alumnos a ON a.curso_id = c.id
LEFT JOIN notas n ON n.alumno_id = a.id AND n.curso_id = c.id AND n.materia_id = m.id
WHERE cpm.profesor_id = 1;  -- <-- cambialo por el ID real


INSERT INTO materias (nombre) VALUES
('Matemáticas'),
('Economía'),
('Historia'),
('Biología'),
('Geografía'),
('Lengua'),
('Filosofía'),
('Tecnología'),
('Form. Ética'),
('Ed. Física'),
('Fisica'),
('Portugés'),
('Artística'),
('TIC'),
('Físico Química'),
('EDI'),
('Ciudadanía'),
('Granja'),
('Agroecología'),
('Proyecto'),
('Química'),
('Química Aplicada'),
('Higiene'),
('Derecho'),
('Salud y Ambiente'),
('Form. Profesional');

 select * from materias;
 
 
INSERT INTO profesores (nombre, apellido, dni, activo) VALUES
('Santiago', 'Maidana', '30123456', TRUE),
('Fernando', 'Vargas', '31234567', TRUE),
('Laura', 'Fernández', '32100001', TRUE),
('Carlos', 'Pérez', '32100002', TRUE),
('Ana', 'López', '32100003', TRUE),
('Julieta', 'Martínez', '32100004', TRUE),
('Mariano', 'Gómez', '32100005', TRUE),
('Nicolás', 'Rojas', '32100006', TRUE),
('María', 'Silva', '32100007', TRUE),
('Esteban', 'Ramírez', '32100008', TRUE);

INSERT INTO cursos (nombre) VALUES
('Primero'),
('Segundo'),
('Tercero'),
('Cuarto'),
('Quinto');

-- id_profesor, id_curso, id_materia
INSERT INTO curso_profesor_materia (curso_id, profesor_id, materia_id) VALUES
-- Santiago Maidana (Matemáticas)
(1, 1, 1),
(2, 1, 1),
(3, 1, 1),
(4, 1, 1),

-- Fernando Vargas (Economía)
(4, 2, 2),
(5, 2, 2),

-- Otros profesores
(1, 3, 3), -- Historia
(2, 4, 4), -- Biología
(3, 5, 5), -- Geografía
(4, 6, 6), -- Lengua
(5, 7, 7), -- Filosofía
(5, 8, 1), -- Matemáticas
(2, 9, 3), -- Historia
(3, 10, 6); -- Lengua

select * from alumnos;


-- Alumnos para cada curso (5 por curso)
INSERT INTO alumnos (nombre, apellido, dni, edad, telefono, tutor, regular, curso_id) VALUES
-- Primero
('Juan', 'García', '40111111', 12, '111111111', 'Carlos García', TRUE, 1),
('Lucía', 'Pérez', '40111112', 12, '111111112', 'Ana Pérez', TRUE, 1),
('Marcos', 'López', '40111113', 13, '111111113', 'Sandra López', TRUE, 1),
('Carla', 'Martínez', '40111114', 12, '111111114', 'Mario Martínez', TRUE, 1),
('Sofía', 'Ruiz', '40111115', 13, '111111115', 'Luis Ruiz', TRUE, 1),

-- Segundo
('Diego', 'Fernández', '40222221', 13, '222222221', 'Laura Fernández', TRUE, 2),
('Natalia', 'Gómez', '40222222', 13, '222222222', 'Oscar Gómez', TRUE, 2),
('Pedro', 'Sosa', '40222223', 14, '222222223', 'Gloria Sosa', TRUE, 2),
('Elena', 'Díaz', '40222224', 14, '222222224', 'Rodolfo Díaz', TRUE, 2),
('Facundo', 'Herrera', '40222225', 13, '222222225', 'Nora Herrera', TRUE, 2),

-- Tercero
('Martina', 'Álvarez', '40333331', 14, '333333331', 'Jorge Álvarez', TRUE, 3),
('Tomás', 'Vega', '40333332', 15, '333333332', 'Marina Vega', TRUE, 3),
('Bruno', 'Ibarra', '40333333', 15, '333333333', 'Lucía Ibarra', TRUE, 3),
('Agustina', 'Correa', '40333334', 14, '333333334', 'Damián Correa', TRUE, 3),
('Camila', 'Ojeda', '40333335', 15, '333333335', 'Teresa Ojeda', TRUE, 3),

-- Cuarto
('Lautaro', 'Medina', '40444441', 15, '444444441', 'Alina Medina', TRUE, 4),
('Florencia', 'Morales', '40444442', 16, '444444442', 'Iván Morales', TRUE, 4),
('Valentina', 'Silva', '40444443', 16, '444444443', 'Fabián Silva', TRUE, 4),
('Julián', 'Ramos', '40444444', 15, '444444444', 'Beatriz Ramos', TRUE, 4),
('Julieta', 'Luna', '40444445', 16, '444444445', 'Néstor Luna', TRUE, 4),

-- Quinto
('Gabriel', 'Benítez', '40555551', 16, '555555551', 'Flor Benítez', TRUE, 5),
('Milagros', 'Mendoza', '40555552', 17, '555555552', 'Ángel Mendoza', TRUE, 5),
('Ignacio', 'Castro', '40555553', 17, '555555553', 'Carmen Castro', TRUE, 5),
('Daniela', 'Acosta', '40555554', 16, '555555554', 'Roberto Acosta', TRUE, 5),
('Emilia', 'Suárez', '40555555', 17, '555555555', 'Sergio Suárez', TRUE, 5);




-- Insertar profesores para primer año (no Matemáticas)
INSERT INTO profesores (nombre, apellido, dni, activo) VALUES
('Pedro', 'Sánchez', '33123456', TRUE),  -- Historia
('María', 'González', '34123456', TRUE),  -- Biología
('Carlos', 'Ramírez', '35123456', TRUE),  -- Geografía
('Lucía', 'Fernández', '36123456', TRUE),  -- Lengua
('Esteban', 'Lopez', '37123456', TRUE),   -- Filosofía
('Juliana', 'Martínez', '38123456', TRUE),  -- Ética
('Santiago', 'Martínez', '39123456', TRUE),  -- Educación Física
('Antonio', 'Ríos', '40123456', TRUE);   -- Sociales


SELECT * FROM materias;
SELECT * FROM cursos;
SELECT * FROM notas;
SELECT * FROM curso_profesor_materia WHERE curso_id = 1 LIMIT 0, 1000;
-- Insertar relaciones para curso "Primero" (curso_id = 1)
INSERT INTO curso_profesor_materia (curso_id, profesor_id, materia_id) VALUES
(1, 2, 2),  -- Economía: Fernando Vargas
(1, 4, 5),  -- Geografía: Carlos Pérez
(1, 5, 6),  -- Lengua: Ana López
(1, 6, 7);  -- Filosofía: Julieta Martínez




SELECT 
    n.id AS nota_id,
    n.alumno_id, 
    n.materia_id, 
    n.numero, 
    n.nota,
    n.trimestre,
    m.nombre AS materia
FROM 
    notas n
JOIN 
    materias m ON m.id = n.materia_id
WHERE 
    n.alumno_id = (SELECT id FROM alumnos WHERE nombre = 'Juan' AND apellido = 'García') 
    AND (n.numero = 1 OR n.numero = 2)  -- Exámenes Dic (1) y Mar (2)
ORDER BY 
    n.numero, n.trimestre;
SELECT * FROM notas WHERE alumno_id = 'ID_DEL_ALUMNO';
-- Desactivar restricciones de claves foráneas temporalmente
SET FOREIGN_KEY_CHECKS = 0;

DELETE FROM examenes_especiales WHERE id > 0;
DELETE FROM boletines WHERE id > 0;
DELETE FROM notas WHERE id > 0;
DELETE FROM alumnos WHERE id > 0;
DELETE FROM curso_profesor_materia WHERE id > 0;
DELETE FROM profesores WHERE id > 0;
DELETE FROM materias WHERE id > 0;
DELETE FROM cursos WHERE id > 0;

ALTER TABLE examenes_especiales AUTO_INCREMENT = 1;
ALTER TABLE boletines AUTO_INCREMENT = 1;
ALTER TABLE notas AUTO_INCREMENT = 1;
ALTER TABLE alumnos AUTO_INCREMENT = 1;
ALTER TABLE curso_profesor_materia AUTO_INCREMENT = 1;
ALTER TABLE profesores AUTO_INCREMENT = 1;
ALTER TABLE materias AUTO_INCREMENT = 1;
ALTER TABLE cursos AUTO_INCREMENT = 1;

SET FOREIGN_KEY_CHECKS = 1;
DELETE FROM curso_profesor_materia WHERE profesor_id > 0;
DELETE FROM profesores WHERE id > 0;

select * from profesores;

SET FOREIGN_KEY_CHECKS = 0;
DELETE FROM curso_profesor_materia WHERE profesor_id > 0;
DELETE FROM profesores WHERE id > 0;
SET FOREIGN_KEY_CHECKS = 1;

SET FOREIGN_KEY_CHECKS = 0;

DELETE FROM examenes_especiales WHERE id > 0;
DELETE FROM boletines WHERE id > 0;
DELETE FROM notas WHERE id > 0;
DELETE FROM alumnos WHERE id > 0;
DELETE FROM curso_profesor_materia WHERE id > 0;
DELETE FROM profesores WHERE id > 0;
DELETE FROM materias WHERE id > 0;
DELETE FROM cursos WHERE id > 0;

ALTER TABLE examenes_especiales AUTO_INCREMENT = 1;
ALTER TABLE boletines AUTO_INCREMENT = 1;
ALTER TABLE notas AUTO_INCREMENT = 1;
ALTER TABLE alumnos AUTO_INCREMENT = 1;
ALTER TABLE curso_profesor_materia AUTO_INCREMENT = 1;
ALTER TABLE profesores AUTO_INCREMENT = 1;
ALTER TABLE materias AUTO_INCREMENT = 1;
ALTER TABLE cursos AUTO_INCREMENT = 1;

SET FOREIGN_KEY_CHECKS = 1;
select * FROM examenes_especiales;
SET SQL_SAFE_UPDATES = 0;
DELETE FROM profesores;
SET SQL_SAFE_UPDATES = 1;
